
	//学习于https://www.cnblogs.com/keguniang/p/9859057.html
	每当我们绘制一个几何体时，我们需要重复同样的工作（首先绑定缓冲区、然后设置顶点属性）。
	当需要绘制的物体很多时，这个过程就显得有些耗时。那么我们有没有一种方式来简化这一过程呢？
	这就是VAO做的事情，它将所有顶点绘制过程中的这些设置和绑定过程集中存储在一起，
	当我们需要时，只需要使用相应的VAO即可。
	VAO的这种方式有点像一个中介，把所有繁琐的绑定和顶点设置工作都集中起来处理，
	我们需要绘制时，直接找这个中介就好了。

	它针对“顶点”而言，也就是说它跟“顶点的绘制”息息相关和 点数组没有任何关系，VAO可以理解为一个状态容器，记录VBO的状态。
	通过VAO就能快速访问到VBO的状态及VBO的数据。
	VAO记录的是一次绘制中所需要的信息，这包括“数据在哪里glBindBuffer”、
	“数据的格式是怎么样的glVertexAttribPointer”。

	VAO是一个保存了所有顶点数据属性的状态结合，它存储了顶点数据的格式以及顶点数据所需的VBO对象的引用。
	VAO本身并没有存储顶点的相关属性数据，这些信息是存储在VBO中的，
	VAO相当于是对很多个VBO的引用，把一些VBO组合在一起作为一个对象统一管理。

	在创建VAO之后，需要使用glBindVertexArray设置它为当前操作的VAO,
	之后我们关于顶点数据的设置（包括数据使用的VBO对象，顶点的属性设置的信息都会被存储在VAO之中）。
	可以说VBO是对顶点属性信息的绑定，VAO是对很多个VBO的绑定。
	