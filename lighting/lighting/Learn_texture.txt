你可能会奇怪为什么sampler2D变量是个uniform，我们却不用glUniform给它赋值。
		使用glUniform1i，我们可以给纹理采样器分配一个位置值，这样的话我们能够在一个片段着色器中设置多个纹理。
		一个纹理的位置值通常称为一个纹理单元(Texture Unit)。
		一个纹理的默认纹理单元是0，它是默认的激活纹理单元。

		纹理单元的主要目的是让我们在着色器中可以使用多于一个的纹理。
		通过把纹理单元赋值给采样器，我们可以一次绑定多个纹理，只要我们首先激活对应的纹理单元。
		就像glBindTexture一样，我们可以使用glActiveTexture激活纹理单元，传入我们需要使用的纹理单元：
		glActiveTexture(GL_TEXTURE0); // 在绑定纹理之前先激活纹理单元
		glBindTexture(GL_TEXTURE_2D, texture);
		激活纹理单元之后，接下来的glBindTexture函数调用会绑定这个纹理到当前激活的纹理单元，
		纹理单元GL_TEXTURE0默认总是被激活，所以我们在前面的例子里当我们使用glBindTexture的时候，
		无需激活任何纹理单元。